import pybullet as p
import pybullet_data
import time
import math

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏≠‡∏á‡∏®‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏£‡πÄ‡∏î‡∏µ‡∏¢‡∏ô
def deg_to_rad(degrees):
    return degrees * (math.pi / 180)

# ‡πÄ‡∏£‡∏¥‡πà‡∏° PyBullet GUI
p.connect(p.GUI)
p.setAdditionalSearchPath(pybullet_data.getDataPath())

# üîπ ‡∏´‡∏°‡∏∏‡∏ô‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå‡πÉ‡∏´‡πâ "‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡∏∂‡πâ‡∏ô" ‡∏ï‡∏≤‡∏°‡πÅ‡∏ô‡∏ß‡πÅ‡∏Å‡∏ô Z
rotation_angle = 0  # ‡∏°‡∏∏‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏∏‡∏ô
base_rotation = p.getQuaternionFromEuler((0, -math.pi / 2, 0))  # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏°‡∏∏‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô

# ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå
robot_id = p.loadURDF(r"C:\Users\Toey\Desktop\Assem_For_URDF_4\urdf\Assem_For_URDF_4.urdf",
                       basePosition=[0, 0, 0],
                       baseOrientation=base_rotation,
                       useFixedBase=True)

# ‡∏õ‡∏¥‡∏î Real-time simulation
p.setRealTimeSimulation(0)

# üîç ‡∏ã‡∏π‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏Å‡∏•‡πâ‡∏Ç‡∏∂‡πâ‡∏ô
target_position = [0, 0, 0.4]
camera_distance = 0.3
camera_yaw = 90
camera_pitch = -45
p.resetDebugVisualizerCamera(camera_distance, camera_yaw, camera_pitch, target_position)

# ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î GUI ‡∏Ñ‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏∏‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î
while True:
    keys = p.getKeyboardEvents()

    if p.B3G_LEFT_ARROW in keys and keys[p.B3G_LEFT_ARROW] & p.KEY_WAS_TRIGGERED:
        rotation_angle += math.pi / 8  # ‡∏´‡∏°‡∏∏‡∏ô‡∏ã‡πâ‡∏≤‡∏¢ 22.5¬∞
    if p.B3G_RIGHT_ARROW in keys and keys[p.B3G_RIGHT_ARROW] & p.KEY_WAS_TRIGGERED:
        rotation_angle -= math.pi / 8  # ‡∏´‡∏°‡∏∏‡∏ô‡∏Ç‡∏ß‡∏≤ 22.5¬∞

    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏∏‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå
    new_rotation = p.getQuaternionFromEuler((0, -math.pi / 2, rotation_angle))
    p.resetBasePositionAndOrientation(robot_id, [0, 0, 0], new_rotation)

    # ‡∏£‡∏±‡∏ô Simulation
    p.stepSimulation()
    time.sleep(1 / 240)
